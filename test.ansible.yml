---
- name: Deploy Frontend with Docker Compose and Self-Signed SSL Certificate
  hosts: all
  become: true
  vars:
    email: your-email@example.com
    domain: your-domain.com

  tasks:
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - git
          - openssl
        state: present
        update_cache: yes

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker's APT repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker CE
      apt:
        name: docker-ce
        state: present
        update_cache: yes

    - name: Install Docker Compose
      shell: |
        curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose

    - name: Create Certificate Directory
      shell: mkdir -p /opt/curtain/cert/{{ domain }}

    - name: Copy docker-compose.yml to the target directory
      copy:
        content: |
          version: "3.8"
          services:
            curtain:
              image: curtain-app
              restart: unless-stopped
              build:
                context: .
                dockerfile: Dockerfile
              ports:
                - "80:80"
                - "443:443"
              networks:
                - curtain-net
              volumes:
                - curtain-certs:/etc/ssl/certs

            cert-gen:
              image: alpine:latest
              command: >
                /bin/sh -c "
                apk add --no-cache openssl &&
                mkdir -p /etc/ssl/certs &&
                openssl req -x509 -nodes -days 365 -newkey rsa:2048
                -keyout /etc/ssl/certs/privkey.pem
                -out /etc/ssl/certs/fullchain.pem
                -subj '/C=US/ST=State/L=City/O=Organization/OU=Department/CN=your-domain.com'
                "
              volumes:
                - curtain-certs:/etc/ssl/certs
              networks:
                - curtain-net
              deploy:
                restart_policy:
                  condition: on-failure

          volumes:
            curtain-certs:

          networks:
            curtain-net:
        dest: /opt/curtain/docker-compose.yml

    - name: Start Docker Compose
      docker_compose:
        project_src: /opt/curtain
        state: present
        restarted: true
